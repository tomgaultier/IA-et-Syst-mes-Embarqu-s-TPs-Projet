$date
	Sat Mar 18 16:47:53 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module stimulus $end
$var wire 32 ! y [31:0] $end
$var reg 16 " x [15:0] $end
$scope module uut $end
$var wire 16 # x [15:0] $end
$var wire 32 $ y [31:0] $end
$var wire 1 % rout $end
$var wire 32 & p [31:0] $end
$scope module add $end
$var wire 32 ' a [31:0] $end
$var wire 1 ( rin $end
$var wire 1 % rout $end
$var wire 32 ) s [31:0] $end
$var wire 1 * r1 $end
$var wire 1 + r0 $end
$var wire 32 , b [31:0] $end
$scope module add_1 $end
$var wire 16 - a [15:0] $end
$var wire 16 . b [15:0] $end
$var wire 1 ( rin $end
$var wire 1 + rout $end
$var wire 16 / s [15:0] $end
$var wire 1 0 r1 $end
$var wire 1 1 r0 $end
$scope module add_1 $end
$var wire 8 2 a [7:0] $end
$var wire 8 3 b [7:0] $end
$var wire 1 ( rin $end
$var wire 1 1 rout $end
$var wire 8 4 s [7:0] $end
$var wire 1 5 r7 $end
$var wire 1 6 r6 $end
$var wire 1 7 r5 $end
$var wire 1 8 r4 $end
$var wire 1 9 r3 $end
$var wire 1 : r2 $end
$var wire 1 ; r1 $end
$var wire 1 < r0 $end
$scope module add_1 $end
$var wire 1 = a $end
$var wire 1 > b $end
$var wire 1 ( rin $end
$var wire 1 < rout $end
$var wire 1 ? s $end
$upscope $end
$scope module add_2 $end
$var wire 1 @ a $end
$var wire 1 A b $end
$var wire 1 < rin $end
$var wire 1 ; rout $end
$var wire 1 B s $end
$upscope $end
$scope module add_3 $end
$var wire 1 C a $end
$var wire 1 D b $end
$var wire 1 ; rin $end
$var wire 1 : rout $end
$var wire 1 E s $end
$upscope $end
$scope module add_4 $end
$var wire 1 F a $end
$var wire 1 G b $end
$var wire 1 : rin $end
$var wire 1 9 rout $end
$var wire 1 H s $end
$upscope $end
$scope module add_5 $end
$var wire 1 I a $end
$var wire 1 J b $end
$var wire 1 9 rin $end
$var wire 1 8 rout $end
$var wire 1 K s $end
$upscope $end
$scope module add_6 $end
$var wire 1 L a $end
$var wire 1 M b $end
$var wire 1 8 rin $end
$var wire 1 7 rout $end
$var wire 1 N s $end
$upscope $end
$scope module add_7 $end
$var wire 1 O a $end
$var wire 1 P b $end
$var wire 1 7 rin $end
$var wire 1 6 rout $end
$var wire 1 Q s $end
$upscope $end
$scope module add_8 $end
$var wire 1 R a $end
$var wire 1 S b $end
$var wire 1 6 rin $end
$var wire 1 5 rout $end
$var wire 1 T s $end
$upscope $end
$upscope $end
$scope module add_2 $end
$var wire 8 U a [7:0] $end
$var wire 8 V b [7:0] $end
$var wire 1 1 rin $end
$var wire 1 0 rout $end
$var wire 8 W s [7:0] $end
$var wire 1 X r7 $end
$var wire 1 Y r6 $end
$var wire 1 Z r5 $end
$var wire 1 [ r4 $end
$var wire 1 \ r3 $end
$var wire 1 ] r2 $end
$var wire 1 ^ r1 $end
$var wire 1 _ r0 $end
$scope module add_1 $end
$var wire 1 ` a $end
$var wire 1 a b $end
$var wire 1 1 rin $end
$var wire 1 _ rout $end
$var wire 1 b s $end
$upscope $end
$scope module add_2 $end
$var wire 1 c a $end
$var wire 1 d b $end
$var wire 1 _ rin $end
$var wire 1 ^ rout $end
$var wire 1 e s $end
$upscope $end
$scope module add_3 $end
$var wire 1 f a $end
$var wire 1 g b $end
$var wire 1 ^ rin $end
$var wire 1 ] rout $end
$var wire 1 h s $end
$upscope $end
$scope module add_4 $end
$var wire 1 i a $end
$var wire 1 j b $end
$var wire 1 ] rin $end
$var wire 1 \ rout $end
$var wire 1 k s $end
$upscope $end
$scope module add_5 $end
$var wire 1 l a $end
$var wire 1 m b $end
$var wire 1 \ rin $end
$var wire 1 [ rout $end
$var wire 1 n s $end
$upscope $end
$scope module add_6 $end
$var wire 1 o a $end
$var wire 1 p b $end
$var wire 1 [ rin $end
$var wire 1 Z rout $end
$var wire 1 q s $end
$upscope $end
$scope module add_7 $end
$var wire 1 r a $end
$var wire 1 s b $end
$var wire 1 Z rin $end
$var wire 1 Y rout $end
$var wire 1 t s $end
$upscope $end
$scope module add_8 $end
$var wire 1 u a $end
$var wire 1 v b $end
$var wire 1 Y rin $end
$var wire 1 X rout $end
$var wire 1 w s $end
$upscope $end
$upscope $end
$upscope $end
$scope module add_2 $end
$var wire 16 x a [15:0] $end
$var wire 16 y b [15:0] $end
$var wire 1 + rin $end
$var wire 1 * rout $end
$var wire 16 z s [15:0] $end
$var wire 1 { r1 $end
$var wire 1 | r0 $end
$scope module add_1 $end
$var wire 8 } a [7:0] $end
$var wire 8 ~ b [7:0] $end
$var wire 1 + rin $end
$var wire 1 | rout $end
$var wire 8 !" s [7:0] $end
$var wire 1 "" r7 $end
$var wire 1 #" r6 $end
$var wire 1 $" r5 $end
$var wire 1 %" r4 $end
$var wire 1 &" r3 $end
$var wire 1 '" r2 $end
$var wire 1 (" r1 $end
$var wire 1 )" r0 $end
$scope module add_1 $end
$var wire 1 *" a $end
$var wire 1 +" b $end
$var wire 1 + rin $end
$var wire 1 )" rout $end
$var wire 1 ," s $end
$upscope $end
$scope module add_2 $end
$var wire 1 -" a $end
$var wire 1 ." b $end
$var wire 1 )" rin $end
$var wire 1 (" rout $end
$var wire 1 /" s $end
$upscope $end
$scope module add_3 $end
$var wire 1 0" a $end
$var wire 1 1" b $end
$var wire 1 (" rin $end
$var wire 1 '" rout $end
$var wire 1 2" s $end
$upscope $end
$scope module add_4 $end
$var wire 1 3" a $end
$var wire 1 4" b $end
$var wire 1 '" rin $end
$var wire 1 &" rout $end
$var wire 1 5" s $end
$upscope $end
$scope module add_5 $end
$var wire 1 6" a $end
$var wire 1 7" b $end
$var wire 1 &" rin $end
$var wire 1 %" rout $end
$var wire 1 8" s $end
$upscope $end
$scope module add_6 $end
$var wire 1 9" a $end
$var wire 1 :" b $end
$var wire 1 %" rin $end
$var wire 1 $" rout $end
$var wire 1 ;" s $end
$upscope $end
$scope module add_7 $end
$var wire 1 <" a $end
$var wire 1 =" b $end
$var wire 1 $" rin $end
$var wire 1 #" rout $end
$var wire 1 >" s $end
$upscope $end
$scope module add_8 $end
$var wire 1 ?" a $end
$var wire 1 @" b $end
$var wire 1 #" rin $end
$var wire 1 "" rout $end
$var wire 1 A" s $end
$upscope $end
$upscope $end
$scope module add_2 $end
$var wire 8 B" a [7:0] $end
$var wire 8 C" b [7:0] $end
$var wire 1 | rin $end
$var wire 1 { rout $end
$var wire 8 D" s [7:0] $end
$var wire 1 E" r7 $end
$var wire 1 F" r6 $end
$var wire 1 G" r5 $end
$var wire 1 H" r4 $end
$var wire 1 I" r3 $end
$var wire 1 J" r2 $end
$var wire 1 K" r1 $end
$var wire 1 L" r0 $end
$scope module add_1 $end
$var wire 1 M" a $end
$var wire 1 N" b $end
$var wire 1 | rin $end
$var wire 1 L" rout $end
$var wire 1 O" s $end
$upscope $end
$scope module add_2 $end
$var wire 1 P" a $end
$var wire 1 Q" b $end
$var wire 1 L" rin $end
$var wire 1 K" rout $end
$var wire 1 R" s $end
$upscope $end
$scope module add_3 $end
$var wire 1 S" a $end
$var wire 1 T" b $end
$var wire 1 K" rin $end
$var wire 1 J" rout $end
$var wire 1 U" s $end
$upscope $end
$scope module add_4 $end
$var wire 1 V" a $end
$var wire 1 W" b $end
$var wire 1 J" rin $end
$var wire 1 I" rout $end
$var wire 1 X" s $end
$upscope $end
$scope module add_5 $end
$var wire 1 Y" a $end
$var wire 1 Z" b $end
$var wire 1 I" rin $end
$var wire 1 H" rout $end
$var wire 1 [" s $end
$upscope $end
$scope module add_6 $end
$var wire 1 \" a $end
$var wire 1 ]" b $end
$var wire 1 H" rin $end
$var wire 1 G" rout $end
$var wire 1 ^" s $end
$upscope $end
$scope module add_7 $end
$var wire 1 _" a $end
$var wire 1 `" b $end
$var wire 1 G" rin $end
$var wire 1 F" rout $end
$var wire 1 a" s $end
$upscope $end
$scope module add_8 $end
$var wire 1 b" a $end
$var wire 1 c" b $end
$var wire 1 F" rin $end
$var wire 1 E" rout $end
$var wire 1 d" s $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module mult $end
$var wire 16 e" a [15:0] $end
$var wire 16 f" b [15:0] $end
$var wire 32 g" p [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 g"
b0 f"
b10011100010000 e"
0d"
0c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
0O"
0N"
0M"
0L"
0K"
0J"
0I"
0H"
0G"
0F"
0E"
b0 D"
b0 C"
b0 B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
b0 !"
b0 ~
b0 }
0|
0{
b0 z
b0 y
b0 x
0w
0v
0u
0t
0s
0r
1q
0p
1o
0n
0m
0l
0k
0j
0i
1h
0g
1f
1e
0d
1c
1b
0a
1`
0_
0^
0]
0\
0[
0Z
0Y
0X
b100111 W
b0 V
b100111 U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
1K
0J
1I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
b10000 4
b0 3
b10000 2
01
00
b10011100010000 /
b0 .
b10011100010000 -
b0 ,
0+
0*
b10011100010000 )
0(
b10011100010000 '
b0 &
0%
b10011100010000 $
b0 #
b0 "
b10011100010000 !
$end
#20000
1k
1t
1]
1Z
12"
b10100 z
b10100 !"
18"
b1010000 4
1Q
0h
b101000100101101010000 !
b101000100101101010000 $
b101000100101101010000 )
b100101101010000 /
b1001011 W
0q
11"
17"
1P
1g
1p
b10100 ~
b1000000 3
b100100 V
b10100 y
b10010001000000 .
b101000010010001000000 &
b101000010010001000000 ,
b101000010010001000000 g"
b10000100 "
b10000100 #
b10000100 f"
#40000
1^
0e
1k
1_
1]
1w
b11100 z
b11100 !"
15"
1N
0Q
b10110000 4
1T
0b
0h
b111001000100010110000 !
b111001000100010110000 $
b111001000100010110000 )
b1000100010110000 /
b10001000 W
0t
1Y
14"
1M
0P
1S
1a
0g
1s
b11100 ~
b10100000 3
b1100001 V
b11100 y
b110000110100000 .
b111000110000110100000 &
b111000110000110100000 ,
b111000110000110100000 g"
b10111010 "
b10111010 #
b10111010 f"
#80000
